name: Build NixOS Lima Image

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm]
      fail-fast: false
    env:
      # HOST_ARCH value must match string in Lima download filename
      HOST_ARCH: ${{ matrix.os == 'ubuntu-24.04' && 'x86_64' || (matrix.os == 'ubuntu-24.04-arm' && 'aarch64') || 'unknown' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install qemu-utils
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-utils

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        env:
          # Use env variable QEMU_SYSTEM_AARCH64 to override Lima's QEMU configuration on aarch64 host
          SYSTEM_FEATURES: ${{ env.HOST_ARCH == 'aarch64' && 'kvm aarch64-linux' || 'kvm' }}
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            system-features = ${{ env.SYSTEM_FEATURES }}
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{ env.HOST_ARCH }} Image
        run: |
          nix build .#packages.${{ env.HOST_ARCH }}-linux.img --out-link result-${{ env.HOST_ARCH }}
          # copy and compress the image (and give it a new name)
          qemu-img convert -O qcow2 -c result-${{ env.HOST_ARCH }}/nixos.qcow2 nixos-lima-unstable-${{ env.HOST_ARCH }}.qcow2

      - name: Upload ${{ env.HOST_ARCH }} image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: nixos-lima-unstable-${{ env.HOST_ARCH }}
          path: nixos-lima-unstable-${{ env.HOST_ARCH }}.qcow2
